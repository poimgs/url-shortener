# name: CI

# on:
#   pull_request:
#     branches: [main, develop]

# jobs:
#   test:
#     name: Test and Lint
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:15
#         env:
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_DB: test_db
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#         ports:
#           - 5432:5432

#     env:
#       DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Generate Prisma client
#         run: npm run db:generate

#       - name: Run database migrations
#         run: npm run db:push --workspace=packages/db

#       - name: Type check
#         run: npm run type-check

#       - name: Lint
#         run: npm run lint

#       - name: Build packages
#         run: npm run build

#   security:
#     name: Security Scan
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
#           cache: 'npm'

#       - name: Install dependencies
#         run: npm ci

#       - name: Run security audit
#         run: npm audit --audit-level moderate

#       - name: Run Snyk to check for vulnerabilities
#         uses: snyk/actions/node@master
#         continue-on-error: true
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#         with:
#           args: --severity-threshold=high
